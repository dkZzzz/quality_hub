// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: proto/sonarqubepb/sonarqube.proto

package sonarqubepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// project 结构
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	BranchName  string `protobuf:"bytes,4,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Project) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Project) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Project) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *Project) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// report 结构
type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	IssueNum    int32  `protobuf:"varint,3,opt,name=issue_num,json=issueNum,proto3" json:"issue_num,omitempty"`
	HotspotNum  int32  `protobuf:"varint,4,opt,name=hotspot_num,json=hotspotNum,proto3" json:"hotspot_num,omitempty"`
	Duplication string `protobuf:"bytes,5,opt,name=duplication,proto3" json:"duplication,omitempty"`
	Coverage    string `protobuf:"bytes,6,opt,name=coverage,proto3" json:"coverage,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{1}
}

func (x *Report) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Report) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Report) GetIssueNum() int32 {
	if x != nil {
		return x.IssueNum
	}
	return 0
}

func (x *Report) GetHotspotNum() int32 {
	if x != nil {
		return x.HotspotNum
	}
	return 0
}

func (x *Report) GetDuplication() string {
	if x != nil {
		return x.Duplication
	}
	return ""
}

func (x *Report) GetCoverage() string {
	if x != nil {
		return x.Coverage
	}
	return ""
}

// issue 结构
type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	File        string `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	StartLine   int32  `protobuf:"varint,5,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`
	EndLine     int32  `protobuf:"varint,6,opt,name=end_line,json=endLine,proto3" json:"end_line,omitempty"`
	StartOffset int32  `protobuf:"varint,7,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset   int32  `protobuf:"varint,8,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	Message     string `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{2}
}

func (x *Issue) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Issue) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Issue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Issue) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Issue) GetStartLine() int32 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *Issue) GetEndLine() int32 {
	if x != nil {
		return x.EndLine
	}
	return 0
}

func (x *Issue) GetStartOffset() int32 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *Issue) GetEndOffset() int32 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (x *Issue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取project
type GetProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	BranchName  string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Token       string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetProjectReq) Reset() {
	*x = GetProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReq) ProtoMessage() {}

func (x *GetProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReq.ProtoReflect.Descriptor instead.
func (*GetProjectReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{3}
}

func (x *GetProjectReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetProjectReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetProjectReq) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *GetProjectReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Project `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code    int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetProjectResp) Reset() {
	*x = GetProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResp) ProtoMessage() {}

func (x *GetProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResp.ProtoReflect.Descriptor instead.
func (*GetProjectResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{4}
}

func (x *GetProjectResp) GetData() *Project {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetProjectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProjectResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取project list
type GetProjectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ProjectId int32  `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectListReq) Reset() {
	*x = GetProjectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListReq) ProtoMessage() {}

func (x *GetProjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListReq.ProtoReflect.Descriptor instead.
func (*GetProjectListReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{5}
}

func (x *GetProjectListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetProjectListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetProjectListReq) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type GetProjectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Project `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Code    int32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetProjectListResp) Reset() {
	*x = GetProjectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectListResp) ProtoMessage() {}

func (x *GetProjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectListResp.ProtoReflect.Descriptor instead.
func (*GetProjectListResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectListResp) GetData() []*Project {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetProjectListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProjectListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 创建project
type CreateProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	BranchName  string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Token       string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateProjectReq) Reset() {
	*x = CreateProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectReq) ProtoMessage() {}

func (x *CreateProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectReq.ProtoReflect.Descriptor instead.
func (*CreateProjectReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{7}
}

func (x *CreateProjectReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateProjectReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CreateProjectReq) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *CreateProjectReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateProjectReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Project `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateProjectResp) Reset() {
	*x = CreateProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResp) ProtoMessage() {}

func (x *CreateProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResp.ProtoReflect.Descriptor instead.
func (*CreateProjectResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{8}
}

func (x *CreateProjectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateProjectResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProjectResp) GetData() *Project {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取report
type GetReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ReportId int32  `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetReportReq) Reset() {
	*x = GetReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportReq) ProtoMessage() {}

func (x *GetReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportReq.ProtoReflect.Descriptor instead.
func (*GetReportReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetReportReq) GetReportId() int32 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

func (x *GetReportReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Report `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code    int32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetReportResp) Reset() {
	*x = GetReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResp) ProtoMessage() {}

func (x *GetReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResp.ProtoReflect.Descriptor instead.
func (*GetReportResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{10}
}

func (x *GetReportResp) GetData() *Report {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetReportResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetReportResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取report list
type GetReportListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetReportListReq) Reset() {
	*x = GetReportListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListReq) ProtoMessage() {}

func (x *GetReportListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListReq.ProtoReflect.Descriptor instead.
func (*GetReportListReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{11}
}

func (x *GetReportListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetReportListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetReportListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Report `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Code    int32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetReportListResp) Reset() {
	*x = GetReportListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListResp) ProtoMessage() {}

func (x *GetReportListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListResp.ProtoReflect.Descriptor instead.
func (*GetReportListResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{12}
}

func (x *GetReportListResp) GetData() []*Report {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetReportListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetReportListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取issue
type GetIssueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetIssueReq) Reset() {
	*x = GetIssueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssueReq) ProtoMessage() {}

func (x *GetIssueReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssueReq.ProtoReflect.Descriptor instead.
func (*GetIssueReq) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{13}
}

func (x *GetIssueReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetIssueReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetIssueReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetIssueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Issue `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Code    int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetIssueResp) Reset() {
	*x = GetIssueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssueResp) ProtoMessage() {}

func (x *GetIssueResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sonarqubepb_sonarqube_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssueResp.ProtoReflect.Descriptor instead.
func (*GetIssueResp) Descriptor() ([]byte, []int) {
	return file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP(), []int{14}
}

func (x *GetIssueResp) GetData() []*Issue {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetIssueResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetIssueResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_sonarqubepb_sonarqube_proto protoreflect.FileDescriptor

var file_proto_sonarqubepb_sonarqube_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62,
	0x65, 0x70, 0x62, 0x2f, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62,
	0x22, 0x8b, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb7,
	0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x74,
	0x73, 0x70, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x05, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e,
	0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x68, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f,
	0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71,
	0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x64, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xd6, 0x03, 0x0a, 0x09, 0x53, 0x6f, 0x6e, 0x61, 0x72,
	0x51, 0x75, 0x62, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62,
	0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x19, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73,
	0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x6f,
	0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x6f, 0x6e,
	0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72,
	0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x6f, 0x6e, 0x61, 0x72, 0x71, 0x75, 0x62, 0x65, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x6e, 0x61, 0x72,
	0x71, 0x75, 0x62, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sonarqubepb_sonarqube_proto_rawDescOnce sync.Once
	file_proto_sonarqubepb_sonarqube_proto_rawDescData = file_proto_sonarqubepb_sonarqube_proto_rawDesc
)

func file_proto_sonarqubepb_sonarqube_proto_rawDescGZIP() []byte {
	file_proto_sonarqubepb_sonarqube_proto_rawDescOnce.Do(func() {
		file_proto_sonarqubepb_sonarqube_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sonarqubepb_sonarqube_proto_rawDescData)
	})
	return file_proto_sonarqubepb_sonarqube_proto_rawDescData
}

var file_proto_sonarqubepb_sonarqube_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_sonarqubepb_sonarqube_proto_goTypes = []interface{}{
	(*Project)(nil),            // 0: sonarqubepb.Project
	(*Report)(nil),             // 1: sonarqubepb.Report
	(*Issue)(nil),              // 2: sonarqubepb.Issue
	(*GetProjectReq)(nil),      // 3: sonarqubepb.GetProjectReq
	(*GetProjectResp)(nil),     // 4: sonarqubepb.GetProjectResp
	(*GetProjectListReq)(nil),  // 5: sonarqubepb.GetProjectListReq
	(*GetProjectListResp)(nil), // 6: sonarqubepb.GetProjectListResp
	(*CreateProjectReq)(nil),   // 7: sonarqubepb.CreateProjectReq
	(*CreateProjectResp)(nil),  // 8: sonarqubepb.CreateProjectResp
	(*GetReportReq)(nil),       // 9: sonarqubepb.GetReportReq
	(*GetReportResp)(nil),      // 10: sonarqubepb.GetReportResp
	(*GetReportListReq)(nil),   // 11: sonarqubepb.GetReportListReq
	(*GetReportListResp)(nil),  // 12: sonarqubepb.GetReportListResp
	(*GetIssueReq)(nil),        // 13: sonarqubepb.GetIssueReq
	(*GetIssueResp)(nil),       // 14: sonarqubepb.GetIssueResp
}
var file_proto_sonarqubepb_sonarqube_proto_depIdxs = []int32{
	0,  // 0: sonarqubepb.GetProjectResp.data:type_name -> sonarqubepb.Project
	0,  // 1: sonarqubepb.GetProjectListResp.data:type_name -> sonarqubepb.Project
	0,  // 2: sonarqubepb.CreateProjectResp.data:type_name -> sonarqubepb.Project
	1,  // 3: sonarqubepb.GetReportResp.data:type_name -> sonarqubepb.Report
	1,  // 4: sonarqubepb.GetReportListResp.data:type_name -> sonarqubepb.Report
	2,  // 5: sonarqubepb.GetIssueResp.data:type_name -> sonarqubepb.Issue
	7,  // 6: sonarqubepb.SonarQube.CreateProject:input_type -> sonarqubepb.CreateProjectReq
	3,  // 7: sonarqubepb.SonarQube.GetProject:input_type -> sonarqubepb.GetProjectReq
	5,  // 8: sonarqubepb.SonarQube.GetProjectList:input_type -> sonarqubepb.GetProjectListReq
	9,  // 9: sonarqubepb.SonarQube.GetReport:input_type -> sonarqubepb.GetReportReq
	11, // 10: sonarqubepb.SonarQube.GetReportList:input_type -> sonarqubepb.GetReportListReq
	13, // 11: sonarqubepb.SonarQube.GetIssue:input_type -> sonarqubepb.GetIssueReq
	8,  // 12: sonarqubepb.SonarQube.CreateProject:output_type -> sonarqubepb.CreateProjectResp
	4,  // 13: sonarqubepb.SonarQube.GetProject:output_type -> sonarqubepb.GetProjectResp
	6,  // 14: sonarqubepb.SonarQube.GetProjectList:output_type -> sonarqubepb.GetProjectListResp
	10, // 15: sonarqubepb.SonarQube.GetReport:output_type -> sonarqubepb.GetReportResp
	12, // 16: sonarqubepb.SonarQube.GetReportList:output_type -> sonarqubepb.GetReportListResp
	14, // 17: sonarqubepb.SonarQube.GetIssue:output_type -> sonarqubepb.GetIssueResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_sonarqubepb_sonarqube_proto_init() }
func file_proto_sonarqubepb_sonarqube_proto_init() {
	if File_proto_sonarqubepb_sonarqube_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sonarqubepb_sonarqube_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sonarqubepb_sonarqube_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sonarqubepb_sonarqube_proto_goTypes,
		DependencyIndexes: file_proto_sonarqubepb_sonarqube_proto_depIdxs,
		MessageInfos:      file_proto_sonarqubepb_sonarqube_proto_msgTypes,
	}.Build()
	File_proto_sonarqubepb_sonarqube_proto = out.File
	file_proto_sonarqubepb_sonarqube_proto_rawDesc = nil
	file_proto_sonarqubepb_sonarqube_proto_goTypes = nil
	file_proto_sonarqubepb_sonarqube_proto_depIdxs = nil
}
